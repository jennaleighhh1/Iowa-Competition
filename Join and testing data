
```{r}
library(readxl)
library(dplyr)
```

Jess's importing
```{r}
ihme_vac <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "IHME Coverage")
ihme_vac_df <- as.data.frame(ihme_vac)
ihme_vac_df[ihme_vac_df == "null"] <- 0
WHO_vac <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "WHO Converage")
WHO_vac_df <- as.data.frame(WHO_vac)
WHO_vac_df[WHO_vac_df=="null"] <- 0
UN_pop <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "UN Population")
UN_pop_df <- as.data.frame(UN_pop)
IHME_pop <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "IHME Population", col_types = c("text", "text", "numeric", "text", "numeric", "text"))
IHME_pop_df <- as.data.frame(IHME_pop)
impact <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "Impact")
impact_df <- as.data.frame(impact)

```


for jennas
```{r}
ihme_vac <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "IHME Coverage")
ihme_vac_df <- as.data.frame(ihme_vac)
ihme_vac_df[ihme_vac_df == "null"] <- 0
WHO_vac <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "WHO Converage")
WHO_vac_df <- as.data.frame(WHO_vac)
WHO_vac_df[WHO_vac_df=="null"] <- 0
UN_pop <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "UN Population")
UN_pop_df <- as.data.frame(UN_pop)
IHME_pop <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "IHME Population")
IHME_pop_df <- as.data.frame(IHME_pop)
impact <- read_excel("C:/Users/jenna/Downloads/entire dataset.xlsx", sheet = "Impact")
impact_df <- as.data.frame(impact)

```


rename neonatals so aggregating can sum all 3 categories for <1 and match UN pop DF structure
```{r}
IHME_pop_df[IHME_pop_df == "Early Neonatal"] <- "<1 year"
IHME_pop_df[IHME_pop_df == "Late Neonatal"] <- "<1 year"
IHME_pop_df[IHME_pop_df == "Post Neonatal"] <- "<1 year"
agg_IHME <- aggregate(IHME_pop_df$IHME_Population, by=list(IHME_pop_df$iso_code, IHME_pop_df$year, IHME_pop_df$age_group_name), FUN = sum)
agg_IHME

```

rename aggregate IHME columns
```{r}
IHME_pop_complete <- (  agg_IHME %>% 
      rename(
        iso_code = Group.1,
        year = Group.2,
        age_group = Group.3,
        IHME_Population = x
        ))
```



cleaned IHME pop df
```{r}
#IHME_pop_complete
```



UN population aggregate for all ages to match WHO df structure
```{r}
agg <- aggregate(UN_pop_df$UN_population, by=list(UN_pop_df$iso_code, UN_pop_df$year), FUN = sum)
agg <- as.data.frame(agg)
agg$age_group = "All Ages"
agg
```
UN rename columns 
```{r}
library(tidyverse)

agg_rename <- (  agg %>% 
      rename(
        iso_code = Group.1,
        year = Group.2,
        UN_population = x,
        age_group = age_group
        ))

```

UN reorder columns in aggregate (all ages category)
```{r}
agg_reorder <- agg_rename[c("iso_code", "age_group", "year", "UN_population")]
```

Bind UN inital dataframe with aggregate so categories exist
```{r}
UN_pop_complete_df <- rbind(UN_pop_df, agg_reorder)
```




```{r}
library(dplyr)
```

join population dataframes
```{r}

pop_df <- UN_pop_complete_df %>% inner_join(IHME_pop_complete, by = c("iso_code", "year", "age_group"))
pop_df
```
Isolate all ages groups to bind to vaccine dataframes -- that way vaccines has the granularity of the entire population per yr per country
```{r}
population_totals <- subset(pop_df, age_group == "All Ages")
population_totals
```
Rename IHME vaccines to have same vaccine names as WHO
```{r}
ihme_vac_df[ihme_vac_df == "rota"] <- "rotac"
ihme_vac_df[ihme_vac_df == "pcv"] <- "pcv3"
ihme_vac_df[ihme_vac_df == "hib"] <- "hib3"
```


join vac WHO and Ihme Dfs
```{r}
WHO_vac_df$vaccine <- tolower(WHO_vac_df$vaccine)
vac_df <- WHO_vac_df %>% inner_join(ihme_vac_df, by = c("iso_code", "year", "vaccine" = "Vaccine"))
vac_df
```


GUIDELINES: For countries missing PCV, Hib or Rotadata, you can use DTP3 as a proxysince these vaccines are often administered at the same time and coverage is usually similar.

Populating 0 values with DTP3 data per guidelines
```{r}
for (i in 1:nrow(vac_df)) {
  if(vac_df$vaccine[[i]] == "rotac" || vac_df$vaccine[[i]] == "pcv3" || vac_df$vaccine[[i]] == "hib3" & vac_df$IHME_Coverage[[i]] == 0){
    yr = vac_df$year[[i]]
    iso_code = vac_df$iso_code[[i]]
    dtp3_IHMEcoverage = vac_df$IHME_Coverage[vac_df$year == yr & vac_df$iso_code == iso_code & vac_df$vaccine == "dtp3"]
    vac_df$IHME_Coverage[[i]] == dtp3_IHMEcoverage

    #print(yr)
    #print(iso_code)
    #print(vac_df$vaccine[[i]])
    

  }
  
  if(vac_df$vaccine[[i]] == "rotac" || vac_df$vaccine[[i]] == "pcv3" || vac_df$vaccine[[i]] == "hib3" & vac_df$WHO_Coverage[[i]] == 0){
    yr = vac_df$year[[i]]
    iso_code = vac_df$iso_code[[i]]
    dtp3_WHOcoverage = vac_df$WHO_Coverage[vac_df$year == yr & vac_df$iso_code == iso_code & vac_df$vaccine == "dtp3"]
    vac_df$WHO_Coverage[[i]] == dtp3_WHOcoverage
  }
}
```




Join vac_df with pop_impact df

```{r}
impact_df[impact_df == "rota"] <- "rotac"
```

```{r}
impact_df$vaccine <- tolower(impact_df$vaccine)
vac_pop_impact <- vac_df %>% left_join(impact_df, by = c("iso_code" = "country", "vaccine"))
vac_pop_impact
```

```{r}
vac_pop_impact[is.na(vac_pop_impact)] <- 0
vac_pop_impact
```



join all ages with vaccine population impact DF
```{r}
FINAL_vaccine_df <- vac_pop_impact %>% left_join(population_totals, by = c("iso_code", "year"))
FINAL_vaccine_df
```

write to csv
```{r}
#write.csv(FINAL_vaccine_df, file = "Final_Vaccine_DF.csv")
```

```{r}
#Calculate fully vaccinated people
FINAL_vaccine_df$WHO_Coverage <- as.numeric(FINAL_vaccine_df$WHO_Coverage)
FINAL_vaccine_df$FVP_IHMEcov_IHME <- (FINAL_vaccine_df$IHME_Population * FINAL_vaccine_df$IHME_Coverage)
FINAL_vaccine_df$FVP_WHOcov_IHME <- (FINAL_vaccine_df$IHME_Population * FINAL_vaccine_df$WHO_Coverage)
#calculate cases averted
FINAL_vaccine_df$TotalCasesAvertedIHME_IHME <- (FINAL_vaccine_df$FVP_IHMEcov_IHME*FINAL_vaccine_df$cases_averted_rate)
FINAL_vaccine_df$TotalCasesAvertedWHO_IHME <- (FINAL_vaccine_df$FVP_WHOcov_IHME*FINAL_vaccine_df$cases_averted_rate)
#calculate efficacy
FINAL_vaccine_df$Efficacy_IHME_IHME <- (FINAL_vaccine_df$TotalCasesAvertedIHME_IHME / FINAL_vaccine_df$IHME_Population)
FINAL_vaccine_df$Efficacy_WHO_IHME <- (FINAL_vaccine_df$TotalCasesAvertedWHO_IHME / FINAL_vaccine_df$IHME_Population)


#Calculate fully vaccinated people
FINAL_vaccine_df$FVP_IHMEcov_UN <- (FINAL_vaccine_df$UN_population * FINAL_vaccine_df$IHME_Coverage)
FINAL_vaccine_df$FVP_WHOcov_UN <- (FINAL_vaccine_df$UN_population * FINAL_vaccine_df$WHO_Coverage)
#calculate cases averted
FINAL_vaccine_df$TotalCasesAvertedIHME_UN <- (FINAL_vaccine_df$FVP_IHMEcov_UN*FINAL_vaccine_df$cases_averted_rate)
FINAL_vaccine_df$TotalCasesAvertedWHO_UN <- (FINAL_vaccine_df$FVP_WHOcov_UN*FINAL_vaccine_df$cases_averted_rate)
#calculate efficacy
FINAL_vaccine_df$Efficacy_IHME_UN <- (FINAL_vaccine_df$TotalCasesAvertedIHME_UN / FINAL_vaccine_df$UN_population)
FINAL_vaccine_df$Efficacy_WHO_UN <- (FINAL_vaccine_df$TotalCasesAvertedWHO_UN / FINAL_vaccine_df$UN_population)


#Calculate for DALYs
FINAL_vaccine_df$DALYSAvertedIHME_IHME <- (FINAL_vaccine_df$FVP_IHMEcov_IHME*FINAL_vaccine_df$dalys_averted_rate)
FINAL_vaccine_df$DALYSAvertedWHO_IHME <- (FINAL_vaccine_df$FVP_WHOcov_IHME*FINAL_vaccine_df$dalys_averted_rate)


FINAL_vaccine_df[is.na(FINAL_vaccine_df)] <- 0

```



1a. Find the difference between UN and IHME population estimates, specifically for children less than 5 years old.
```{r}
#Hypothesis:
#Ho: There is no difference (m=0)
#Ha: There is a difference (m!=0)

less_than_5 <- pop_df

less_than_5 <- subset(less_than_5, age_group == c("1 to 4", "<1 year"))

t.test(less_than_5$UN_population, less_than_5$IHME_Population, paired = TRUE, alternative = "two.sided")
#Reject the null hypothesis, and say the difference between these are not equal to 0
```


1b. Find the difference between health impact of IHME and WHO vaccine coverage
```{r}
#Hypothesis same format as above

cor.coverage <- cor(FINAL_vaccine_df$Efficacy_WHO_IHME, FINAL_vaccine_df$Efficacy_IHME_IHME)
cor.coverage
cov.t.test <- t.test(FINAL_vaccine_df$Efficacy_WHO_IHME, FINAL_vaccine_df$Efficacy_IHME_IHME, paired = TRUE, alternative = "two.sided")
cov.t.test
#P-value < 0.05, reject null hypothesis and assume there is a difference between health impact coverage data
```

```{r}
#testing difference in health impact again using UN pop data
cor.coverage.UN <- cor(FINAL_vaccine_df$Efficacy_IHME_UN, FINAL_vaccine_df$Efficacy_WHO_UN)
cor.coverage.UN
t.test.UN <- t.test(FINAL_vaccine_df$Efficacy_IHME_UN, FINAL_vaccine_df$Efficacy_WHO_UN, paired = TRUE, alternative = "two.sided")
t.test.UN
```


1ci. Assess the impact of using the different data sets to estimate health impact 
```{r}
#for rates between 2018 and 2030
years <- FINAL_vaccine_df
years <- subset(years, year == 2018:2030)
years_IHME.test <- t.test(years$Efficacy_IHME_IHME, years$Efficacy_WHO_IHME, paired = TRUE, alternative = "two.sided")
years_IHME.test
```

1ciii. In which countries and for which vaccines does the choice of data source impact relative prioritization?

```{r}
# Two-way ANOVA with interaction effect
# These two calls are equivalent
anova.impact <- aov(Efficacy_IHME_IHME~vaccine+iso_code, data = FINAL_vaccine_df)
summary(anova.impact)
#We can assume both vaccine and iso_code are statistically significant. This would mean that changing vaccine or country would significantly affect efficacy.
```
